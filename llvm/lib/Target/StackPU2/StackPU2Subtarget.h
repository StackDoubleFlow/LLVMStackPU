//===-- StackPU2Subtarget.h - Define Subtarget for the StackPU2 -*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the StackPU2 specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_STACKPU2_SUBTARGET_H
#define LLVM_STACKPU2_SUBTARGET_H

#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#include "StackPU2GenSubtargetInfo.inc"

namespace llvm {

/// A specific StackPU2 target MCU.
class StackPU2Subtarget : public StackPU2GenSubtargetInfo {
public:
  //! Creates an StackPU2 subtarget.
  //! \param TT  The target triple.
  //! \param CPU The CPU to target.
  //! \param FS  The feature string.
  //! \param TM  The target machine.
  StackPU2Subtarget(const Triple &TT, const std::string &CPU, const std::string &FS,
                    const TargetMachine &TM);

  /// Parses a subtarget feature string, setting appropriate options.
  /// \note Definition of function is auto generated by `tblgen`.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

private:
  // Dummy member, We cannot have a SubtargetFeature with
  // no variable, so we instead bind pseudo features to this variable.
  bool FeatureDummy;
};

} // end namespace llvm

#endif // LLVM_STACKPU2_SUBTARGET_H